= [Mac][Emacs] EasyPG

Emacsにはgpg連携用のEasyPGなるものがある。gpg拡張子が付くファイルは自動的に暗号化・復号化してくれる。Emacsでパスワード管理をするid-manager.elはEasyPGを使っている。

MacGPG2はパスフレーズの入力の際，新たにダイアログを出して入力を促してくる。これはEasyPGを用いていても同様で，暗号化ファイルを開くたびに一度Emacsからフォーカスを外さなければならない。自宅でやる分には問題ないが，リモート環境でも同じ動作をするようで，ダイアログにリモートからはアクセスできるわけがない。

そんなわけで，パスフレーズ入力をEmacs上で行いたいのだが，かなりつまづいたのでメモ。結果からすると，諦めたのだが。

まず，EasyPG公式のページ(http://www.emacswiki.org/emacs/EasyPG)に同様の問題を見つける。MacGPG2に限らないようだが，ダイアログはpinentryなどのagentが常駐することにより実現しているらしい。要するにこのagentが起動している限り，パスフレーズの入力にはagentのダイアログを用いることになる。gpgは環境変数"GPG_AGENT_INFO"を参照してagentを発見し，そのagentにパスフレーズ入力を任せるようだ。この環境変数を無効化してしまえば，non-graphicalにパスフレーズ入力ができる。

EasyPGが動作する際，Emacsがterminal上で動いているなら"GPG_AGENT_INFO"を無効にするというadviceを作成してみる。
(defadvice epg--start (around advice-epg-disable-agent disable)
  "Don't allow epg--start to use gpg-agent in plain text terimnals."
  (if (display-graphic-p)
      ad-do-it
    (let ((agent (getenv "GPG_AGENT_INFO")))
      (setenv "GPG_AGENT_INFO" nil)
      ad-do-it
      (setenv "GPG_AGENT_INFO" agent))))
(ad-enable-advice 'epg--start 'around 'advice-epg-disable-agent)
(ad-activate 'epg--start)
こうしても解決しなかった。どうも元々GPG_AGENT_INFOが定義されていないっぽい。

ここまで来るのにだいぶ時間がかかっているので，かなり諦めかけていたが，GnuPGを自分でビルドすれば解決するかもと思い，やってみた。が，ビルド自体に手こずった。MacGPG2はアンインストール。gnupgにはlibgpg-error, libgcrypt, libksba, libassuan, pth, pinentryが必要で，一緒にビルド。libgcrypt, gnupgはそのままではコンパイルできなかったため，ここ(http://lists.gnupg.org/pipermail/gcrypt-devel/2014-April/003029.html, http://www.gossamer-threads.com/lists/gnupg/users/63121?search_string=intmax_t;#63121)を参考にパッチを作って適用している。一連の流れは以下のとおり。
	% wget "ftp://ftp.gnupg.org/gcrypt/libgpg-error/libgpg-error-1.13.tar.bz2"
	% tar xzvf libgpg-error-1.13.tar.bz2
	% cd libgpg-error-1.13
	% ./configure
	% make
	% make install
	% cd ..
	% wget "ftp://ftp.gnupg.org/gcrypt/libgcrypt/libgcrypt-1.6.1.tar.bz2"
	% tar xzvf libgcrypt-1.6.1.tar.bz2
	% cd libgcrypt-1.6.1/mpi
	% patch < ../../libgcrypt-1.6.1.patch
	% cd ..
	% ./configure
	% make
	% make install
	% cd ..
	% wget "ftp://ftp.gnupg.org/gcrypt/libksba/libksba-1.3.0.tar.bz2"
	% tar xzvf libksba-1.3.0.tar.bz2
	% cd libksba-1.3.0
	% ./configure
	% make
	% make install
	% cd ..
	% wget "ftp://ftp.gnupg.org/gcrypt/libassuan/libassuan-2.1.1.tar.bz2"
	% tar xzvf libassuan-2.1.1.tar.bz2
	% cd libassuan-2.1.1
	% ./configure
	% make
	% make install
	% cd ..
	% wget "ftp://ftp.gnu.org/gnu/pth/pth-2.0.7.tar.gz"
	% tar xvf pth-2.0.7.tar.gz
	% cd pth-2.0.7
	% ./configure
	% make
	% make test
	% sudo make install
	% cd ..
	% wget "ftp://ftp.gnupg.org/gcrypt/gnupg/gnupg-2.0.23.tar.bz2"
	% tar xzvf gnupg-2.0.23.tar.bz2
	% cd gnupg-2.0.23
	% ./configure
	% patch -p0 < ../gnupg-2.0.23.patch
	% make
	% make install
	% ls -s /usr/local/bin/gpg2 /usr/local/bin/gpg
	% wget "ftp://ftp.gnupg.org/gcrypt/pinentry/pinentry-0.8.3.tar.bz2"
	% tar xzvf pinentry-0.8.3.tar.bz2
	% cd pinentry-0.8.3
	% ./configure
	% make
	% sudo make install
実はpinentryは入れていなかったのだが，gnupgをビルドした後起動するとpinentryが必要だと言われたため(INSTALLに書いてなかったのに)，入れてある。まあ，pinentryを入れた時点で嫌な予感はしていたのだが，案の定Emacs上ではパスフレーズ入力ができない。それどころか，この方法ではパスフレーズ入力にpinentryを用いているっぽいことはMacGPG2と同じなのだが，GUIは出してくれない。そのため，terminal上でgpgを動かすとCUIで入力画面を出力する。実はこれが厄介で，GUIの場合Emacsからフォーカスを外せば入力画面にフォーカスできるが，CUIとなるとどこに出力しているのかすらわからない。見た目にはどこにも出力されていない(ただし，プロセスは存在している)ので，フォーカスなどできるはずがない。というわけで，MacGPG2を用いるよりも厄介な問題が発生したので，やむなくアンインストール。
	% cd gnupg-2.0.23
	% sudo make uninstall
	% cd ../libassuan-2.1.1
	% sudo make uninstall
	% cd ../libgcrypt-1.6.1
	% sudo make uninstall
	% cd ../libgpg-error-1.13
	% sudo make uninstall
	% cd ../libksba-1.3.0
	% sudo make uninstall
	% cd ../pinentry-0.8.3
	% sudo make uninstall
	% cd ../pth-2.0.7
	% sudo make uninstall

再度GPG Suiteをインストールし，諦めた。

[2014-06-15 11:06] 

